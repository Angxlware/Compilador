;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; OPERADOR DE ASIGNACION
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; op1 := op2
Asignar MACRO op1, op2
	MOV AX, op2 ; Al = op2
	MOV op1, AX ; op1 = AL
ENDM

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; OPERADORES ARITMETICOS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; res = op1 + op2
Sumar MACRO op1, op2, res
    MOV AX, op1 ; EAX = op1
	ADD AX, op2 ; EAX += op2
	MOV res, AX ; res = EAX
ENDM

; res = op1 - op2
Restar MACRO op1, op2, res
	MOV AX, op1 ; EAX = op1
	SUB AX, op2 ; EAX -= op2
	MOV res, AX ; res = EAX
ENDM

; res = op1 * op2
Multiplicar MACRO op1, op2, res
	MOV AX, op1
	MOV BX, op2
	MUL BX
	MOV res, AX
ENDM

; res = op1 / op2
Dividir	MACRO op1, op2, res
	MOV AX, op1
	MOV BX, op2
	DIV BX
	MOV res, AX
ENDM

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; OPERADORES RELACIONALES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; res = op1 < op2
MenorQue MACRO op1, op2, res
	LOCAL LABEL1
	LOCAL SALIR

	MOV AX, op1
	CMP AX, op2
	JGE LABEL1
	; true
	MOV res, 1
	JMP SALIR
	; false
	LABEL1:
		MOV res, 0
	SALIR:
ENDM

; res = op1 <= op2
MenorIgualQue MACRO op1, op2, res
	LOCAL LABEL1
	LOCAL SALIR

	MOV AX, op1
	CMP AX, op2
	JG	LABEL1
	; true
	MOV res, 1
	JMP SALIR
	; false
	LABEL1:
		MOV res, 0
	SALIR:
ENDM

; res = op1 = op2
IgualQue MACRO op1, op2, res
	LOCAL LABEL1
	LOCAL SALIR

	MOV AX, op1
	CMP AX, op2
	JNE LABEL1
	; true
	MOV res, 1
	JMP SALIR
	; false
	LABEL1:
		MOV res, 0
	SALIR:
ENDM

; res = op1 <> op2
DistintoQue MACRO op1, op2, res
	LOCAL LABEL1
	LOCAL SALIR

	MOV AX, op1
	CMP AX, op2
	JE	LABEL1
	; true
	MOV res, 1
	JMP SALIR
	; false
	LABEL1:
		MOV res, 0
	SALIR:
ENDM

; res = op1 > op2
MayorQue MACRO op1, op2, res
	LOCAL LABEL1
	LOCAL SALIR

	MOV AX, op1
	CMP AX, op2
	JLE	LABEL1
	; true
	MOV res, 1
	JMP SALIR
	; false
	LABEL1:
		MOV res, 0
	SALIR:
ENDM

; res = op1 >= op2
MayorIgualQue MACRO op1, op2, res
	LOCAL LABEL1
	LOCAL SALIR

	MOV AX, op1
	CMP AX, op2
	JL	LABEL1
	; true
	MOV res, 1
	JMP SALIR
	; false
	LABEL1:
		MOV RESULTADO, 0
	SALIR:
ENDM

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SALTOS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

JF MACRO VALOR1, DESTINO
   	MOV AX, VALOR1
   	CMP AX, 1                   
   	JNE DESTINO
ENDM

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ENTRADA / SALIDA
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

LeerCadena MACRO cadena
    LOCAL bucle
    LOCAL fin
    MOV SI, OFFSET cadena ; Obtiene la dirección de inicio de la cadena

    ; Leer caracteres desde el teclado hasta presionar Enter
bucle:
    MOV AH,3Fh
    MOV BX,0000h
	MOV CX,0100h
	LEA DX,cadena
	INT 21h
ENDM

LeerNumero MACRO numero
	
ENDM

EscribirCadena MACRO cadena
	MOV AH, 09
	LEA DX, cadena
	INT 21h
ENDM

EscribirNumero MACRO numero
local bucle
local imprimir
local fin
    MOV AX, numero ; Carga el número en el registro AX
    MOV CX, 10 ; Establece CX a 10 para dividir por 10 en cada iteración

    MOV BX, 0 ; Inicializa BX a cero (indicador de impresión)

bucle:
	XOR DX, DX ; Limpia DX
    DIV CX ; Divide el número en AX por 10 (resto en DX, cociente en AX)

    PUSH DX ; Almacena el dígito convertido en la pila
    INC BX ; Incrementa BX (indicador de impresión)

    CMP AX, 0 ; Comprueba si el cociente es cero
    JNZ bucle ; Si no es cero, repite el bucle

imprimir:
    CMP BX, 0 ; Comprueba si el indicador de impresión es cero
    JZ fin ; Si es cero, sale del bucle de impresión

	POP DX ; Recupera los dígitos de la pila en orden inverso

    ADD DX, '0' ; Convierte el dígito en un carácter ASCII
    MOV AH, 02h ; AH = 2 para imprimir el carácter
    INT 21h ; Imprime el dígito

    DEC BX ; Decrementa BX (indicador de impresión)
    JMP imprimir ; Salta al siguiente dígito

fin:
	MOV AH, 02h
	MOV DL, 0ah
	INT 21H
	MOV DL, 0dh
	INT 21H
ENDM

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;